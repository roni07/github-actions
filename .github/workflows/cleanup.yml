name: Delete Merged Branches

on:
  pull_request:
    branches:
      - master  # Trigger the action when a PR is opened/updated against master

jobs:
  delete-merged-branches:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to ensure all merged PRs are included

      - name: Identify the actual base branch
        run: |
          # Get the base branch from the PR (the branch of the original repo)
          echo "Base branch: ${{ github.event.pull_request.base.ref }}"
          BASE_BRANCH="${{ github.event.pull_request.base.ref }}"

          # Fetch the base branch from the original repository
          git fetch origin "$BASE_BRANCH"

          # Print the branches merged into the base branch (not the fork branch)
          echo "Merged PR branches (excluding the last one):"
          
          branches=$(git log --merges --oneline "$BASE_BRANCH" | grep -E 'Merge pull request' | awk -F'from ' '{print $2}' | sed 's|^[^/]*/||')

          # Skip the first branch in the list (which is the most recent merge)
          branches_to_delete=$(echo "$branches" | tail -n +2)

          # Loop through and delete the branches
          for branch in $branches_to_delete; do
            echo "Deleting branch: $branch"
            # Delete the local branch
            git branch -d "$branch" 2>/dev/null || git branch -D "$branch"
            # Delete the remote branch
            git push origin --delete "$branch" || echo "Branch $branch does not exist remotely."
          done
